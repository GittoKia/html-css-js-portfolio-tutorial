package src;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kiaab
 */
public class AbbasiKiaMethodsAssignmentUI extends javax.swing.JFrame {

    /**
     * Creates new form AbbasiKiaMethodsAsignmentUI
     */
    /**
     * Rounds a given number to the nearest hundredth
     *
     * @param num the number to round
     * @return a rounded number with two decimal places
     */
    public static double Round(double num) {

        return (double) Math.round(num * 100) / 100;
    }

    /**
     * Finds the volume of a rectangular prism
     * @param length the length of the prism
     * @param width the width of the prism
     * @param height the height of the prism
     * @return the volume of the prism
     */
    public static double RecVol(double length, double width, double height) {

        return Round(length * width * height);
    }

    /**
     * Finds the surface area of a rectangular prism
     * @param length the length of the prism
     * @param width the width of the prism
     * @param height the height of the prism
     * @return the surface area of the prism
     */
    public static double RecArea(double length, double width, double height) {

        return Round(2 * (length * width + length * height + width * height));
    }
    
    /**
     * Finds the surface area of a triangular prism
     * @param length the length of the rectangle in the prism
     * @param base the base of the triangle in the prism
     * @param height the height of the triangle in the prism
     * @return the surface area of the prism
     */
    public static double TriArea(double length, double base, double height) {

        double hyp=Math.sqrt(Math.pow(base/2,2)+Math.pow(height,2));
        return Round(height * base + length * (2*hyp+base));
    }

    /**
     * Finds the surface area of a cylinder
     * @param radius the radius of the cylinder
     * @param height the height of the cylinder
     * @return the surface area of the cylinder
     */
    public static double CylSurArea(double radius, double height) {

        return Round(2 * Math.PI * radius * (radius + height));
    }
    
    

    /**
     * Finds the volume of a cylinder
     * @param radius the radius of the cylinder
     * @param height the height of the cylinder
     * @return the volume of the cylinder
     */
    public static double CylVol(double radius, double height) {

        return Round(Math.pow(radius, 2) * height * Math.PI);
    }

    /**
     * Converts given Fahrenheit value to Celsius
     * @param fahr a Fahrenheit degree
     * @return a Celsius degree
     */
    public static double FahrtoCels(double fahr) {
        return Round((5.0 / 9) * (fahr - 32));
    }
    
    /**
     * Converts given Celsius value to Fahrenheit
     * @param cels a Celsius degree
     * @return a Fahrenheit degree
     */
    public static double CelstoFahr(double cels) {
        return Round((9.0 / 5) * cels + 32);
    }

    
    /**
     * Converts given Celsius value to Kelvin
     * @param cels a Celsius degree
     * @return a Kelvin degree
     */
    public static double CelstoKelv(double cels) {
        return Round(cels + 273.15);
    }

    /**
     * Converts given Celsius value to Kelvin
     * @param kelv a Kelvin degree
     * @return a Celsius degree
     */
    public static double KelvtoCels(double kelv) {
        return Round(kelv - 273.15);
    }

    /**
     * Returns an array containing the inputted number and zero or one
     * @param userInput String to test
     * @return zero and zero when number is invalid, otherwise returns the number and one
     */
    public double[] ErrorCheck(String userInput) {
        double[] arbitrary = {0,1};
        try {
            arbitrary[0] = Double.parseDouble(userInput);
            arbitrary[1]=1;
        } catch (NumberFormatException e) {
            arbitrary[1]=0;
        }
        return arbitrary;
    }

    public AbbasiKiaMethodsAssignmentUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        RadiusInput = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        NamedLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LengthInput = new javax.swing.JTextField();
        WidthInput = new javax.swing.JTextField();
        HInput = new javax.swing.JTextField();
        RecVolCalc = new javax.swing.JButton();
        RecAreaCalc = new javax.swing.JButton();
        HeightInput = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        CylSurCalc = new javax.swing.JButton();
        CylVolCalc = new javax.swing.JButton();
        ShapeComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        RecVolOutput = new javax.swing.JLabel();
        RecAreaOutput = new javax.swing.JLabel();
        CylVolOutput = new javax.swing.JLabel();
        CylAreaOutput = new javax.swing.JLabel();
        UnitRecBox = new javax.swing.JComboBox<>();
        UnitCylBox = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        ConvertFahrenheit = new javax.swing.JButton();
        FahrInput = new javax.swing.JTextField();
        CelsInput = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        KelvInput = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        ConvertCelsius = new javax.swing.JButton();
        ConvertKelvin = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Shape")));

        jLabel3.setText("Cylinder");

        RadiusInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadiusInputActionPerformed(evt);
            }
        });

        jLabel12.setText("Radius: ");

        jLabel13.setText("Height: ");

        jLabel4.setText("L: ");

        NamedLabel.setText("W: ");

        jLabel6.setText("H: ");

        jLabel7.setText("Surface Area: ");

        jLabel8.setText("Volume: ");

        LengthInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LengthInputActionPerformed(evt);
            }
        });
        LengthInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LengthInputKeyPressed(evt);
            }
        });

        WidthInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WidthInputActionPerformed(evt);
            }
        });

        HInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HInputActionPerformed(evt);
            }
        });

        RecVolCalc.setText("Calculate");
        RecVolCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecVolCalcActionPerformed(evt);
            }
        });

        RecAreaCalc.setText("Calculate");
        RecAreaCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecAreaCalcActionPerformed(evt);
            }
        });

        HeightInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeightInputActionPerformed(evt);
            }
        });

        jLabel10.setText("Volume: ");

        jLabel11.setText("Surface Area: ");

        CylSurCalc.setText("Calculate");
        CylSurCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CylSurCalcActionPerformed(evt);
            }
        });

        CylVolCalc.setText("Calculate");
        CylVolCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CylVolCalcActionPerformed(evt);
            }
        });

        ShapeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rectangular", "Triangular" }));
        ShapeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ShapeComboBoxItemStateChanged(evt);
            }
        });
        ShapeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShapeComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Prism");

        RecVolOutput.setText("[]");

        RecAreaOutput.setText("[]");

        CylVolOutput.setText("[]");

        CylAreaOutput.setText("[]");

        UnitRecBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "mm", "cm", "m", "km" }));

        UnitCylBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "mm", "cm", "m", "km" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel3)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ShapeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RadiusInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(LengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(NamedLabel)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(WidthInput, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HInput, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UnitRecBox, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HeightInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(UnitCylBox, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CylVolCalc)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CylSurCalc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RecVolCalc, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RecAreaCalc, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RecVolOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                    .addComponent(RecAreaOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CylVolOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CylAreaOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {HInput, LengthInput, RadiusInput});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {HeightInput, WidthInput});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {RecAreaCalc, RecVolCalc});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RecVolCalc)
                            .addComponent(jLabel8)
                            .addComponent(RecVolOutput)
                            .addComponent(UnitRecBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RecAreaCalc)
                            .addComponent(jLabel7)
                            .addComponent(RecAreaOutput))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CylVolCalc)
                                .addComponent(UnitCylBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(CylVolOutput)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(CylSurCalc)
                            .addComponent(CylAreaOutput)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(NamedLabel)
                            .addComponent(HInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ShapeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(WidthInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(HeightInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(RadiusInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel3)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {HInput, HeightInput, LengthInput, RadiusInput, WidthInput});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {RecAreaCalc, RecVolCalc});

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Temperature"));

        jLabel9.setText("Fahrenheit: ");

        ConvertFahrenheit.setText("Convert");
        ConvertFahrenheit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConvertFahrenheitActionPerformed(evt);
            }
        });

        FahrInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FahrInputActionPerformed(evt);
            }
        });

        CelsInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CelsInputActionPerformed(evt);
            }
        });

        jLabel14.setText("Celsius: ");

        KelvInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KelvInputActionPerformed(evt);
            }
        });

        jLabel15.setText("Kelvin: ");

        ConvertCelsius.setText("Convert");
        ConvertCelsius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConvertCelsiusActionPerformed(evt);
            }
        });

        ConvertKelvin.setText("Convert");
        ConvertKelvin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConvertKelvinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(FahrInput, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ConvertFahrenheit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ConvertCelsius)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CelsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 275, Short.MAX_VALUE)
                        .addComponent(ConvertKelvin)
                        .addGap(231, 231, 231))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(KelvInput, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(218, 218, 218))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(FahrInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ConvertFahrenheit, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CelsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(ConvertCelsius, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(ConvertKelvin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KelvInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ConvertCelsius, ConvertFahrenheit, ConvertKelvin});

        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        jButton1.setText("Quit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Kia Abbasi's Methods + GUI Assignment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Clear)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Clear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(20, 20, 20))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RecVolCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecVolCalcActionPerformed
        
        //define variables
        double num1, num2, num3, result;
        num1 = ErrorCheck(LengthInput.getText())[0];
        num2 = ErrorCheck(WidthInput.getText())[0];
        num3 = ErrorCheck(HInput.getText())[0];
        
        //not numbers
        if (ErrorCheck(LengthInput.getText())[1]==0 || 
 ErrorCheck(WidthInput.getText())[1]==0 || ErrorCheck(HInput.getText())[1]==0){
            RecVolOutput.setText("Bad Input");
        }
      
    //invalid numbers    
    else if (num1 <= 0 || num2 <= 0 || num3 <= 0) {

            RecVolOutput.setText("Be POSITIVE");
        } else {  
            
            //calculate volume
            result = RecVol(num1, num2, num3);
            if (ShapeComboBox.getSelectedIndex()==1){
            result /=2;
        }  
        RecVolOutput.setText(String.valueOf(result)+" "+UnitRecBox.getSelectedItem()+"³");
        }
    }//GEN-LAST:event_RecVolCalcActionPerformed

    private void RecAreaCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecAreaCalcActionPerformed
        
        //define variables
        double num1, num2, num3, result;
        num1 = ErrorCheck(LengthInput.getText())[0];
        num2 = ErrorCheck(WidthInput.getText())[0];
        num3 = ErrorCheck(HInput.getText())[0];
        
        //not numbers
        if (ErrorCheck(LengthInput.getText())[1]==0 || 
 ErrorCheck(WidthInput.getText())[1]==0 || ErrorCheck(HInput.getText())[1]==0){
            RecAreaOutput.setText("Bad Input");
        }
        //invalid numbers
        else if (num1 <= 0 || num2 <= 0 || num3 <= 0) {

            RecAreaOutput.setText("Be POSITIVE");
        } else {
            
            //calculate surface area
            if (ShapeComboBox.getSelectedIndex()==0){
            result = RecArea(num1, num2, num3);}
            else {
            result = TriArea(num1, num2, num3);}
            RecAreaOutput.setText(String.valueOf(result)+" "+UnitRecBox.getSelectedItem()+"²");
        }
    }//GEN-LAST:event_RecAreaCalcActionPerformed

    private void CylVolCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CylVolCalcActionPerformed
        
        //define variables
        double num1, num2, result;
        num1 = ErrorCheck(RadiusInput.getText())[0];
        num2 = ErrorCheck(HeightInput.getText())[0];
        
        //not numbers
        if (ErrorCheck(RadiusInput.getText())[1]==0 || ErrorCheck(HeightInput.getText())[1]==0){
            CylVolOutput.setText("Bad Input");
        }
        
        //invalid numbers
        else if (num1 <= 0 || num2 <= 0) {

            CylVolOutput.setText("Be POSITIVE");
        } else {
            
            //calculate volume
            result = CylVol(num1, num2);
            CylVolOutput.setText(String.valueOf(result)+" "+UnitCylBox.getSelectedItem()+"³");
        }
    }//GEN-LAST:event_CylVolCalcActionPerformed

    private void CylSurCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CylSurCalcActionPerformed
        
        //define variables
        double num1, num2, result;
        num1 = ErrorCheck(RadiusInput.getText())[0];
        num2 = ErrorCheck(HeightInput.getText())[0];
       
        //not numbers
        if (ErrorCheck(RadiusInput.getText())[1]==0 || ErrorCheck(HeightInput.getText())[1]==0){
            CylAreaOutput.setText("Bad Input");
        }
        
        //invalid numbers
        else if (num1 <= 0 || num2 <= 0) {

            CylAreaOutput.setText("Be POSITIVE");
        } else {
            
            //calculate surface area
            result = CylSurArea(num1, num2);
            CylAreaOutput.setText(String.valueOf(result)+" "+UnitCylBox.getSelectedItem()+"²");    
        }
    }//GEN-LAST:event_CylSurCalcActionPerformed

    private void ConvertFahrenheitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConvertFahrenheitActionPerformed
        
        //define variables
        double num1, resultC, resultK;
        num1 = ErrorCheck(FahrInput.getText())[0];

        //not number
        if (ErrorCheck(FahrInput.getText())[1]==0){
            CelsInput.setText("Bad Input");
            KelvInput.setText("Bad Input");
        }
        
        //invalid number
        else if (num1 <= -459.67) {

            CelsInput.setText("Be POSITIVER");
            KelvInput.setText("Be POSITIVER");
        } else {
            
            //calculate conversions
            resultC = FahrtoCels(num1);
            CelsInput.setText(String.valueOf(resultC)+" ℃");
            resultK = CelstoKelv(FahrtoCels(num1));
            KelvInput.setText(String.valueOf(resultK)+" K");
        }
    }//GEN-LAST:event_ConvertFahrenheitActionPerformed

    private void LengthInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LengthInputActionPerformed
        RecVolCalcActionPerformed(evt);
        RecAreaCalcActionPerformed(evt);
    }//GEN-LAST:event_LengthInputActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed

        //reset text
        CelsInput.setText("");
        CylAreaOutput.setText("[]");
        CylVolOutput.setText("[]");
        FahrInput.setText("");
        KelvInput.setText("");
        HInput.setText("");
        HeightInput.setText("");
        LengthInput.setText("");
        RadiusInput.setText("");
        RecVolOutput.setText("[]");
        WidthInput.setText("");
        RecAreaOutput.setText("[]");
    }//GEN-LAST:event_ClearActionPerformed

    private void ConvertCelsiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConvertCelsiusActionPerformed
        
        //define variables
        double num1, resultF,resultK;
        num1 = ErrorCheck(CelsInput.getText())[0];

        //not number
        if (ErrorCheck(CelsInput.getText())[1]==0){
            FahrInput.setText("Bad Input");
            KelvInput.setText("Bad Input");
        }
 
        //invalid number
        else if (num1 <= -273.15) {

            FahrInput.setText("Be POSITIVER");
            KelvInput.setText("Be POSITIVER");
        } else {
            
            //calculate conversions
            resultF = CelstoFahr(num1);
            FahrInput.setText(String.valueOf(resultF)+ " ℉");
            num1 = ErrorCheck(CelsInput.getText())[0];
            resultK = CelstoKelv(num1);
            KelvInput.setText(String.valueOf(resultK)+" K");
        }
        
    }//GEN-LAST:event_ConvertCelsiusActionPerformed

    private void ConvertKelvinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConvertKelvinActionPerformed
        
        //define variables
        double num1, resultC,resultF;
        num1 = ErrorCheck(KelvInput.getText())[0];

        //not number
        if (ErrorCheck(KelvInput.getText())[1]==0){
            CelsInput.setText("Bad Input");
            FahrInput.setText("Bad Input");
        }
        
        //invalid umber
        else if (num1 <= 0) {

            CelsInput.setText("Be POSITIVE");
            FahrInput.setText("Be POSITIVE");
        } else {
            
            //calclate conversions
            resultC = KelvtoCels(num1);
            CelsInput.setText(String.valueOf(resultC)+" ℃");
            resultF = CelstoFahr(resultC);
            FahrInput.setText(String.valueOf(resultF)+" ℉");
        }
    }//GEN-LAST:event_ConvertKelvinActionPerformed

    private void ShapeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShapeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ShapeComboBoxActionPerformed

    private void ShapeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ShapeComboBoxItemStateChanged
       
        //change label
        if (ShapeComboBox.getSelectedIndex()==1)
        NamedLabel.setText("B: ");
        else{
        NamedLabel.setText("W: ");}
    }//GEN-LAST:event_ShapeComboBoxItemStateChanged

    private void LengthInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LengthInputKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_LengthInputKeyPressed

    private void WidthInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WidthInputActionPerformed
        RecVolCalcActionPerformed(evt);
        RecAreaCalcActionPerformed(evt);
    }//GEN-LAST:event_WidthInputActionPerformed

    private void HInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HInputActionPerformed
        RecVolCalcActionPerformed(evt);
        RecAreaCalcActionPerformed(evt);
    }//GEN-LAST:event_HInputActionPerformed

    private void RadiusInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadiusInputActionPerformed
        CylVolCalcActionPerformed(evt);
        CylSurCalcActionPerformed(evt);
    }//GEN-LAST:event_RadiusInputActionPerformed

    private void HeightInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeightInputActionPerformed
        CylVolCalcActionPerformed(evt);
        CylSurCalcActionPerformed(evt);
    }//GEN-LAST:event_HeightInputActionPerformed

    private void FahrInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FahrInputActionPerformed
        ConvertFahrenheitActionPerformed(evt);
    }//GEN-LAST:event_FahrInputActionPerformed

    private void CelsInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CelsInputActionPerformed
        ConvertCelsiusActionPerformed(evt);
    }//GEN-LAST:event_CelsInputActionPerformed

    private void KelvInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KelvInputActionPerformed
        ConvertKelvinActionPerformed(evt);
    }//GEN-LAST:event_KelvInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbbasiKiaMethodsAssignmentUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbbasiKiaMethodsAssignmentUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbbasiKiaMethodsAssignmentUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbbasiKiaMethodsAssignmentUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbbasiKiaMethodsAssignmentUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CelsInput;
    private javax.swing.JButton Clear;
    private javax.swing.JButton ConvertCelsius;
    private javax.swing.JButton ConvertFahrenheit;
    private javax.swing.JButton ConvertKelvin;
    private javax.swing.JLabel CylAreaOutput;
    private javax.swing.JButton CylSurCalc;
    private javax.swing.JButton CylVolCalc;
    private javax.swing.JLabel CylVolOutput;
    private javax.swing.JTextField FahrInput;
    private javax.swing.JTextField HInput;
    private javax.swing.JTextField HeightInput;
    private javax.swing.JTextField KelvInput;
    private javax.swing.JTextField LengthInput;
    private javax.swing.JLabel NamedLabel;
    private javax.swing.JTextField RadiusInput;
    private javax.swing.JButton RecAreaCalc;
    private javax.swing.JLabel RecAreaOutput;
    private javax.swing.JButton RecVolCalc;
    private javax.swing.JLabel RecVolOutput;
    private javax.swing.JComboBox<String> ShapeComboBox;
    private javax.swing.JComboBox<String> UnitCylBox;
    private javax.swing.JComboBox<String> UnitRecBox;
    private javax.swing.JTextField WidthInput;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
